Create the Project:
go to firebase
setup name, analytics, etc.


For Flutter/Android:
go to firebase console
select Android 
enter package name
- android > app > build.gradle -> applicationId
register app
download google-services.json file
- android > app -> google-services.json
add dependencies
- android > build.gradle -> classpath 'google-services'
- android > app > build.gradle -> implementation 'google.firbase'
add plugin
- android > app > build.gradle -> apply plugin 'google'
(?) initialize firebase_core in main.dart
(?) add multidex
- android > app > build.gradle -> implementation 'android.multidex'
- android > app > build.gradle -> defaultConfig -> multiDexEnabled true


For Flutter/iOS:
go to firebase console
select iOS
enter info
- app bundle id
 - ios > right-click Runner > Reveal in Finder > open Runner.xcodeproj
 - camel-case, lowercase first
register app
download GoogleService-Info.plist
- add into XCode
 - Runner.xcodeproj > Runner > Runner -> GoogleService-Info.plist -> Finish
- (?) add into project
skip Firebase SDK & code init (for Swift / XCode dev?)
continue to console
(VS code) open Podfile
- uncomment line #2 (platform)
- update version to highest in Pods -> Local Podspecs -> all jsons highest version
cd ios
(?) pod update
pod install


For Web:
npm init
npm install --save firebase
register on firebase
- for web (after creating project)
- (ignore?: include import files)
- (ignore?: provide config values)
initialize (see below)

For Web & Local Hosting (CLI):
(see above)
firebase init
- select features needed (follow wizard in console)
- public directory: dist 
firebase login*
add custom domain
- see Hosting in Firebase console
npm run build
firebase deploy