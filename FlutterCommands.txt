Flutter Commands

Install:
https://flutter.dev/docs/get-started/install/macos
flutter create my_app
cd my_app

Checks:
flutter doctor
which flutter

Standard:
open -a Simulator
flutter run
- prompts for device after initial setup w/ device / simulator 
- devices needs to be active / open to activate

Adding Packages:
go to pub.dev
- manual search and addition to pubspec.yaml

SHIFT+CMD+P 
> Dart: Add Dependency
enter package
select package

Updating:
flutter update
see if "dart:html" is added to file and remove
flutter clean
flutter run

Upgrading an older version:
flutter pub upgrade --major-versions

Removing excess / old files:
flutter clean
flutter pub get

Installing for Local Testing
flutter run --release
- troubleshoot w/ 'flutter clean'

Check devices:
flutter devices

Get all yaml packages:
flutter packages get

Release on iOS:
(https://docs.flutter.dev/deployment/ios)
update pubspec.yaml version
open Runner.xcodeproj
- check display name
- check bundle identifier
- sign in
- check assets
- check info.plist and user permissions requests
- add iPad images / app icons (all sizes?)
(?) run once on a real device
flutter build ipa
setup bundle id
- go to developer.apple.com
- go to certificates, identifiers, and profiles
- go to identifiers
- add new
 - App IDs -> App
 - match to xcode 
 - select capabilities / services
 - register
setup app on store
- go to appstoreconnect.apple.com
- add New App
- fill out info & create
submit a build
- open newly created archive (see vs code output)
 - app/build/ios/archive/...
- Validate app
- next -> next -> always allow -> validate -> done
- distribute app
 - app store connect -> upload -> next -> next -> upload -> done
testflight vs. full submit

Release on Android:
- steps (https://docs.flutter.dev/deployment/android)
 - flutter build apk (no --api-split)


Update and Submit New build:
update pubspec.yaml version
open Runner.xcodeproj
- update bundle identifier
flutter build ipa
submit a build
- open newly created archive (see vs code output)
 - app/build/ios/archive/...
- (?) validate app
- next -> next -> always allow -> validate -> done
- distribute app
 - app store connect -> upload -> next -> next -> upload -> done