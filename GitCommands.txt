Git Commands

Install:
git init
- in source


Link to GitHub:
setup repo in GitHub via website
git remote add origin https://repo.git
- git remote -v (to see status)
do standard upload
- git add .
- git commit -m "The message"
git push -u origin master
- might have to enter username & password if not signed in (or cache info)
- might need to use git push --set-upstream origin master


Cloning from GitHub:
git clone https://repo.git
- open file after Cloning
(?) npm i package
- might require a package as well
(?) flutter clean > flutter run
- might require a "cleansing"


Switching to a different repo:
setup repo in GitHub via website
git remote set-url origin git://new.url.here
do standard upload (see above)


Checks:
git fetch
git checkout origin/master
- see remote contents
git merge origin/master
- merge local w/ remote contents
git pull
- fetches & merges in a single setup

git status 2>/dev/null; echo $?
- inside git repo; should return 0 (not 128)


Cleanup:
git remote rm origin
- also delete on website

rm -rf .git
- semi-removes sub-folder git connections


Standard:
git status
git add .
git commit -m "the description"
git push


New Branch:
git checkout -b NEW-BRANCH

git branch
git remote
git branch -r

git push -u origin NEW-BRANCH


Updating a Branch:
git checkout master (start from local master)
git pull (newest updates from origin/master)
git checkout branch-to-update
git merge master (update from local)


Hide Flutter Projects:
# Firebase
/android/app/google-services.json
/android/app/local.properties
/io/firebase_app_id_file.json
/ios/Runner/GoogleService-Info.plist